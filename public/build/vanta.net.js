import{V as t,a as s,r as i,m as o,g as e,b as n}from"./3d.js";let r="object"==typeof window&&window.THREE;class h extends s{static initClass(){this.prototype.defaultOptions={color:16727937,backgroundColor:2299196,points:10,maxDistance:20,spacing:15,showDots:!0}}constructor(t){r=t.THREE||r,super(t)}genPoint(t,s,o){let e;if(this.points||(this.points=[]),this.options.showDots){const t=new r.SphereGeometry(.25,12,12),s=new r.MeshLambertMaterial({color:this.options.color});e=new r.Mesh(t,s)}else e=new r.Object3D;return this.cont.add(e),e.ox=t,e.oy=s,e.oz=o,e.position.set(t,s,o),e.r=i(-2,2),this.points.push(e)}onInit(){this.cont=new r.Group,this.cont.position.set(0,0,0),this.scene.add(this.cont);let t=this.options.points,{spacing:s}=this.options;o()&&(t=~~(.75*t),s=~~(.65*s));const i=t*t*2;this.linePositions=new Float32Array(i*i*3),this.lineColors=new Float32Array(i*i*3);const h=e(new r.Color(this.options.color)),a=e(new r.Color(this.options.backgroundColor));this.blending=h>a?"additive":"subtractive";const l=new r.BufferGeometry;l.setAttribute("position",new r.BufferAttribute(this.linePositions,3).setUsage(r.DynamicDrawUsage)),l.setAttribute("color",new r.BufferAttribute(this.lineColors,3).setUsage(r.DynamicDrawUsage)),l.computeBoundingSphere(),l.setDrawRange(0,0);const p=new r.LineBasicMaterial({vertexColors:r.VertexColors,blending:"additive"===this.blending?r.AdditiveBlending:null,transparent:!0});this.linesMesh=new r.LineSegments(l,p),this.cont.add(this.linesMesh);for(let i=0;i<=t;i++)for(let o=0;o<=t;o++){const e=n(-3,3),r=(i-t/2)*s+n(-5,5);let h=(o-t/2)*s+n(-5,5);i%2&&(h+=.5*s),this.genPoint(r,e-n(5,15),h),this.genPoint(r+n(-5,5),e+n(5,15),h+n(-5,5))}this.camera=new r.PerspectiveCamera(25,this.width/this.height,.01,1e4),this.camera.position.set(50,100,150),this.scene.add(this.camera);const c=new r.AmbientLight(16777215,.75);return this.scene.add(c),this.spot=new r.SpotLight(16777215,1),this.spot.position.set(0,200,0),this.spot.distance=400,this.spot.target=this.cont,this.scene.add(this.spot)}onDestroy(){this.scene&&this.scene.remove(this.linesMesh),this.spot=this.points=this.linesMesh=this.lineColors=this.linePositions=null}setOptions(t){super.setOptions(t),t.color&&this.points.forEach((s=>{s.material.color=new r.Color(t.color)}))}onUpdate(){let t;const s=this.camera;Math.abs(s.tx-s.position.x)>.01&&(t=s.tx-s.position.x,s.position.x+=.02*t),Math.abs(s.ty-s.position.y)>.01&&(t=s.ty-s.position.y,s.position.y+=.02*t),s.lookAt(new r.Vector3(0,0,0));let i=0,o=0,e=0;const n=new r.Color(this.options.backgroundColor),h=new r.Color(this.options.color),a=h.clone().sub(n);this.rayCaster&&this.rayCaster.setFromCamera(new r.Vector2(this.rcMouseX,this.rcMouseY),this.camera);for(let t=0;t<this.points.length;t++){let s,l;const p=this.points[t];l=this.rayCaster?this.rayCaster.ray.distanceToPoint(p.position):1e3;const c=l.clamp(5,15);if(p.scale.x=p.scale.y=p.scale.z=(.25*(15-c)).clamp(1,100),0!==p.r){let t=Math.atan2(p.position.z,p.position.x);s=Math.sqrt(p.position.z*p.position.z+p.position.x*p.position.x),t+=25e-5*p.r,p.position.x=s*Math.cos(t),p.position.z=s*Math.sin(t)}for(let l=t;l<this.points.length;l++){const t=this.points[l],c=p.position.x-t.position.x,d=p.position.y-t.position.y,u=p.position.z-t.position.z;if(s=Math.sqrt(c*c+d*d+u*u),s<this.options.maxDistance){let l;const c=(2*(1-s/this.options.maxDistance)).clamp(0,1);l="additive"===this.blending?new r.Color(0).lerp(a,c):n.clone().lerp(h,c),this.linePositions[i++]=p.position.x,this.linePositions[i++]=p.position.y,this.linePositions[i++]=p.position.z,this.linePositions[i++]=t.position.x,this.linePositions[i++]=t.position.y,this.linePositions[i++]=t.position.z,this.lineColors[o++]=l.r,this.lineColors[o++]=l.g,this.lineColors[o++]=l.b,this.lineColors[o++]=l.r,this.lineColors[o++]=l.g,this.lineColors[o++]=l.b,e++}}}return this.linesMesh.geometry.setDrawRange(0,2*e),this.linesMesh.geometry.attributes.position.needsUpdate=!0,this.linesMesh.geometry.attributes.color.needsUpdate=!0,.001*this.t}onMouseMove(t,s){const i=this.camera;i.oy||(i.oy=i.position.y,i.ox=i.position.x,i.oz=i.position.z);const o=Math.atan2(i.oz,i.ox),e=Math.sqrt(i.oz*i.oz+i.ox*i.ox),n=o+2*(t-.5)*(this.options.mouseCoeffX||1);i.tz=e*Math.sin(n),i.tx=e*Math.cos(n),i.ty=i.oy+50*(s-.5)*(this.options.mouseCoeffY||1),this.rayCaster,this.rcMouseX=2*t-1,this.rcMouseY=2*-t+1}onRestart(){this.scene&&this.scene.remove(this.linesMesh),this.points=[]}}h.initClass();var a=t.register("NET",h);export{a as default};
//# sourceMappingURL=vanta.net.js.map
